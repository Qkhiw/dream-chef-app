// frontend/src/App.jsx (‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏°‡∏µ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Save)
import { useState, useEffect } from 'react';
import './App.css';

function App() {
  // --- State Management (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°) ---
  const [ingredients, setIngredients] = useState('');
  const [quantity, setQuantity] = useState('');
  const [style, setStyle] = useState('‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏™‡∏ï‡∏£‡∏µ‡∏ó‡∏ü‡∏π‡πâ‡∏î‡πÄ‡∏¢‡∏≤‡∏ß‡∏£‡∏≤‡∏ä');
  
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState(null);

  const [imageUrl, setImageUrl] = useState('');
  const [recipe, setRecipe] = useState(null);

  // --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà: ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û ---
  const handleSaveImage = () => {
    if (!imageUrl) return;
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Link ‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î
    const link = document.createElement('a');
    link.href = imageUrl;
    // ‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏ô‡∏π ‡∏´‡∏£‡∏∑‡∏≠‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡πá‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠ default
    const fileName = recipe?.menu_name ? `${recipe.menu_name}.png` : 'dream-chef-image.png';
    link.download = fileName;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
  };

  // --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà: ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏π‡∏ï‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£ ---
  const handleSaveRecipe = () => {
    if (!recipe) return;
    const recipeText = `‡πÄ‡∏°‡∏ô‡∏π: ${recipe.menu_name}\n\n‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏≥:\n${recipe.instructions}`;
    const blob = new Blob([recipeText], { type: 'text/plain;charset=utf-8' });
    const url = URL.createObjectURL(blob);
    const link = document.createElement('a');
    link.href = url;
    link.download = `${recipe.menu_name}.txt`;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    URL.revokeObjectURL(url);
  };

  // --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Submit (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°) ---
  const handleSubmit = async (event) => {
    // ... (‡πÇ‡∏Ñ‡πâ‡∏î‡πÉ‡∏ô handleSubmit ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏∏‡∏Å‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏£) ...
    event.preventDefault();
    if (!ingredients || !quantity) {
      alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡πÅ‡∏•‡∏∞‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô');
      return;
    }
    setImageUrl(''); setRecipe(null); setError(null);
    setIsLoading(true);
    try {
      const response = await fetch('/api/generate-creation', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ ingredients, quantity, style }),
      });
      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.error || '‡∏°‡∏µ‡∏ö‡∏≤‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î');
      }
      const data = await response.json();
      setImageUrl(data.image_url);
      setRecipe(JSON.parse(data.recipe));
    } catch (err) {
      setError(err.message);
      console.error("Error:", err);
    } finally {
      setIsLoading(false);
    }
  };

  // --- Effect ‡πÉ‡∏´‡∏°‡πà: ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤ ---
  useEffect(() => {
    const handleBeforeUnload = (event) => {
      // ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡πá‡∏ï‡πà‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏¢‡∏π‡πà
      if (imageUrl && recipe) {
        event.preventDefault();
        event.returnValue = ''; // ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤
      }
    };

    window.addEventListener('beforeunload', handleBeforeUnload);

    // Cleanup function: ‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠ component ‡∏ñ‡∏π‡∏Å‡∏ó‡∏≥‡∏•‡∏≤‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏ö event listener ‡∏≠‡∏≠‡∏Å
    return () => {
      window.removeEventListener('beforeunload', handleBeforeUnload);
    };
  }, [imageUrl, recipe]); // Effect ‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠ imageUrl ‡∏´‡∏£‡∏∑‡∏≠ recipe ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á


  // --- JSX Rendering ---
  return (
    <div className="app-container">
      {/* ... ‡∏™‡πà‡∏ß‡∏ô main-card ‡πÅ‡∏•‡∏∞ form ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏° ... */}
      <div className="main-card">
        <h1 className="title">‡∏ô‡∏±‡∏Å‡∏õ‡∏£‡∏∏‡∏á‡∏ù‡∏±‡∏ô</h1>
        <p className="subtitle">‡∏ö‡∏≠‡∏Å‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö ‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏´‡πâ AI ‡∏õ‡∏£‡∏∏‡∏á‡∏ù‡∏±‡∏ô‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì</p>
        <form onSubmit={handleSubmit}>
          <div className="form-group"><label htmlFor="ingredients-input">‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì:</label><input id="ingredients-input" type="text" value={ingredients} onChange={(e) => setIngredients(e.target.value)} placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÅ‡∏Å‡∏∞, ‡πÇ‡∏£‡∏™‡πÅ‡∏°‡∏£‡∏µ‡πà, ‡πÅ‡∏™‡∏á‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå..."/></div>
          <div className="form-group"><label htmlFor="quantity-input">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô/‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì:</label><input id="quantity-input" type="text" value={quantity} onChange={(e) => setQuantity(e.target.value)} placeholder="‡πÄ‡∏ä‡πà‡∏ô 2 ‡∏ä‡∏¥‡πâ‡∏ô, 1 ‡∏Å‡∏¥‡πÇ‡∏•‡∏Å‡∏£‡∏±‡∏°, 1 ‡∏Ç‡∏ß‡∏î..."/></div>
          <div className="form-group"><label htmlFor="style-select">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∏‡∏á:</label><select id="style-select" value={style} onChange={(e) => setStyle(e.target.value)}><option value="Thai Street Food in Yaowarat at night">‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏™‡∏ï‡∏£‡∏µ‡∏ó‡∏ü‡∏π‡πâ‡∏î‡πÄ‡∏¢‡∏≤‡∏ß‡∏£‡∏≤‡∏ä</option><option value="Royal Thai Cuisine served in golden plate">‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ä‡∏≤‡∏ß‡∏ß‡∏±‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏≠‡∏á</option><option value="Spicy Isaan style with sticky rice">‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏≠‡∏µ‡∏™‡∏≤‡∏ô‡∏£‡∏™‡πÅ‡∏ã‡πà‡∏ö</option><option value="Floating market food on a boat">‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÉ‡∏ô‡∏ï‡∏•‡∏≤‡∏î‡∏ô‡πâ‡∏≥</option><option value="Southern Thai food, very spicy and colorful">‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÉ‡∏ï‡πâ‡∏£‡∏™‡∏à‡∏±‡∏î‡∏à‡πâ‡∏≤‡∏ô</option><option value="Modern Thai cuisine, fine dining presentation">‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÑ‡∏ó‡∏¢‡∏™‡πÑ‡∏ï‡∏•‡πå‡πÇ‡∏°‡πÄ‡∏î‡∏¥‡∏£‡πå‡∏ô</option></select></div>
          <button type="submit" disabled={isLoading}>{isLoading ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏∏‡∏á...' : '‡πÄ‡∏™‡∏Å‡∏™‡∏£‡∏£‡∏õ‡∏±‡πâ‡∏ô‡πÅ‡∏ï‡πà‡∏á!'}</button>
        </form>
      </div>
      
      <div className="result-section">
        {/* ... cauldron-container ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏° ... */}
        <div className={`cauldron-container ${isLoading ? 'loading' : ''}`}>
          {isLoading && <div className="loader"></div>}
          {!isLoading && error && <div className="error-message">‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: <br/> {error}</div>}
          {!isLoading && !error && !imageUrl && (<div className="placeholder"><span>üç≤</span><p>‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏õ‡∏£‡∏≤‡∏Å‡∏è‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà</p></div>)}
          {!isLoading && imageUrl && (<img src={imageUrl} alt="Generated food" className="result-image-display" />)}
        </div>
        
        {/* --- ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏° Save --- */}
        {!isLoading && recipe && (
          <div className="recipe-card">
            <h2>{recipe.menu_name || "‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏ô‡∏π"}</h2>
            <p>{recipe.instructions || "‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏≥"}</p>
            {/* --- Container ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏° Save --- */}
            <div className="save-buttons-container">
              <button onClick={handleSaveImage} className="save-button">üñºÔ∏è ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û</button>
              <button onClick={handleSaveRecipe} className="save-button">üìù ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏π‡∏ï‡∏£</button>
            </div>
          </div>
        )}
      </div>
    </div>
  );
}

export default App;